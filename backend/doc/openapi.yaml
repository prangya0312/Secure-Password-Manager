openapi: 3.0.0
info:
  title: LessPass Server API
  version: 1.0.0
servers:
  - url: https://api.lesspass.com/
paths:
  /auth/users/reset_password/:
    summary: Recover lost password
    post:
      tags:
        - Auth
      summary: Ask for a new password
      operationId: auth_users_reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_reset_password'
        description: email to received the confirm password reset link
        required: true
      responses:
        '204':
          description: Recover suscessfully
  /auth/users/set_password/:
    summary: Change user password
    post:
      tags:
        - Auth
      summary: Change user password
      description: Change password of existing user
      operationId: authuserssetpassword
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_set_password'
        description: New user email and password
        required: true
      responses:
        '204':
          description: Password changed suscessfully
        '401':
          $ref: '#/components/responses/unauthorized_error'
  /auth/users/reset_password_confirm/:
    summary: Confirm password reset
    post:
      tags:
        - Auth
      summary: Confirm password change
      description: Confirm your new password with the uid and token send to the user
      operationId: auth_users_reset_password_confirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_confirm_reset_password'
        description: uid, token, new_password and re_new_password
        required: true
      responses:
        '204':
          description: Recover suscessfully
  /auth/jwt/create/:
    summary: Perform user login
    post:
      tags:
        - Auth
      summary: Authenticate an existing user
      description: Authenticate an existing user
      operationId: authjwtcreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_signup_login'
        description: New user email and password
        required: true
      responses:
        '200':
          $ref: '#/components/responses/auth_jwt_create'
  /auth/jwt/refresh/:
    summary: Perform token refresh
    post:
      tags:
        - Auth
      summary: Refresh user token
      description: Refresh user token
      operationId: authjwtrefresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jwt_token_refresh'
        description: Refresh token
        required: true
      responses:
        '201':
          $ref: '#/components/responses/auth_jwt_refresh'
        '400':
          description: Refresh token is in blank
          content:
            application/json:
              example:
                refresh: [ "This field may not be blank." ]
        '401':
          description: Refresh token has wrong type, is not valid or expired
          content:
            application/json:
              examples:
                token is invalid or expired:
                  value:
                    detail: Token is invalid or expired
                    code: token_not_valid
                token has wrong type:
                  value:
                    detail: Token has wrong type
                    code: token_not_valid
  /passwords/:
    summary: Work with stored passwords
    get:
      tags:
        - Passwords
      summary: Get passwords list
      description: Get passwords list
      operationId: passwordsget
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Query parameter to search for a password profile by site. If password profile site contains search, the password profiles matching are returned.
      security:
        - JWTAuth: []
      responses:
        '200':
          $ref: '#/components/responses/passwords'
        '401':
          $ref: '#/components/responses/unauthorized_error'
    post:
      tags:
        - Passwords
      summary: Create new password
      description: Create new password
      operationId: passwordspost
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/password'
        description: Create new password
        required: true
      responses:
        '200':
          $ref: '#/components/responses/password'
        '401':
          $ref: '#/components/responses/unauthorized_error'
  /passwords/{password_id}/:
    summary: Modify or delete stored password
    put:
      tags:
        - Passwords
      summary: Modify existing password
      description: Modify existing password
      operationId: passwordsidput
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/password_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/password'
        description: Modify existing password
        required: true
      responses:
        '200':
          $ref: '#/components/responses/password'
        '400':
          description: Parse error
          content:
            application/json:
              examples:
                invalid values in fields:
                  value:
                    field: [ "A valid value is required." ]
                invalid json:
                  value:
                    detail: "JSON parse error - Expecting value: line 1 column 1 (char 0)"
        '401':
          $ref: '#/components/responses/unauthorized_error'
        '404':
          description: Password ID not found
          content:
            application/json:
              example:
                detail: Not found.
    delete:
      tags:
        - Passwords
      summary: Modify existing password
      description: Modify existing password
      operationId: passwordsiddelete
      security:
        - JWTAuth: []
      parameters:
        - $ref: '#/components/parameters/password_id'
      responses:
        '204':
          description: Deletion done
        '404':
          description: Password ID not found
          content:
            application/json:
              example:
                detail: Not found.
components:
  parameters:
    password_id:
      in: path
      name: password_id
      required: true
      description: The ID of password
      schema:
        type: string
  responses:
    auth_jwt_create:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/jwt_response'
    auth_jwt_refresh:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/jwt_response'
    password:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/password_response'
    passwords:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/passwords_response'
    unauthorized_error:
      description: Unauthorized error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_response'
          example:
            detail: Given token not valid for any token type
            code: token_not_valid
            messages:
              - token_class: AccessToken
                token_type: access
                message: Token is invalid or expired
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    user_signup_login:
      required:
        - email
        - password
      type: object
      properties:
        email:
          description: User email
          type: string
          format: email
        password:
          description: User password
          type: string
          minLength: 8
          format: password
    user_reset_password:
      required:
        - email
      type: object
      properties:
        email:
          description: User email
          type: string
          format: email
    user_confirm_reset_password:
      required:
        - uid
        - token
        - new_password
        - re_new_password
      type: object
      properties:
        uid:
          description: uid present in the link
          type: string
        token:
          description: token  present in the link
          type: string
        new_password:
          description: User new password
          type: string
          minLength: 8
          format: password
        re_new_password:
          description: Repeat user new password
          type: string
          minLength: 8
          format: password
    user_set_password:
      required:
        - current_password
        - new_password
        - re_new_password
      type: object
      properties:
        current_password:
          description: User current password
          type: string
          minLength: 8
          format: password
        new_password:
          description: User new password
          type: string
          minLength: 8
          format: password
        re_new_password:
          description: Repeat user new password
          type: string
          minLength: 8
          format: password
    jwt_token_refresh:
      required:
        - refresh
      type: object
      properties:
        refresh:
          description: Refresh token
          type: string
    jwt_response:
      type: object
      properties:
        access:
          description: Access token
          type: string
        refresh:
          description: Refresh token
          type: string
    password:
      type: object
      required:
        - login
        - site
        - uppercase
        - lowercase
        - digits
        - symbols
        - length
        - counter
        - version
      properties:
        login:
          description: User login
          type: string
          example: user@example.com
        site:
          description: User login
          type: string
          example: example.com
        uppercase:
          description: Generated password has uppercase characters
          type: boolean
          default: true
        lowercase:
          description: Generated password has lowercase characters
          type: boolean
          default: true
        digits:
          description: Generated password has digits
          type: boolean
          default: true
        symbols:
          description: Generated password has symbol characters
          type: boolean
          default: true
        length:
          description: Password length
          type: integer
          default: 16
        counter:
          description: Password counter
          type: integer
          default: 1
        version:
          description: Password version algorithm
          type: integer
          default: 2
    password_response:
      type: object
      properties:
        id:
          description: Password unique id
          type: string
          format: uuid
        login:
          description: User login
          type: string
          example: user@example.com
        site:
          description: User login
          type: string
          example: example.com
        uppercase:
          description: Generated password has uppercase characters
          type: boolean
          default: true
        lowercase:
          description: Generated password has lowercase characters
          type: boolean
          default: true
        digits:
          description: Generated password has digits
          type: boolean
          default: true
        symbols:
          description: Generated password has symbol characters
          type: boolean
          default: true
        length:
          description: Password length
          type: integer
          default: 16
        counter:
          description: Password counter
          type: integer
          default: 1
        version:
          description: Password version algorithm
          type: integer
          default: 2
        created:
          description: Creation date
          type: string
          format: date-time
        modified:
          description: Creation date
          type: string
          format: date-time
    passwords_response:
      type: object
      properties:
        count:
          description: Password items count
          type: integer
          example: 1
        previous:
          description: Previous page
          type: integer
          default: null
        next:
          description: Next page
          type: integer
          default: null
        results:
          description: Password items
          type: array
          items:
            $ref: '#/components/schemas/password_response'
    error_response:
      type: object
      properties:
        detail:
          description: Error detail
          type: string
        code:
          description: Error code
          type: string
        messages:
          description: Error messages
          type: array
          items:
            type: object
